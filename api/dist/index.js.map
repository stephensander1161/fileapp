{"version":3,"sources":["../src/index.js"],"names":["dotenv","config","AWS","update","s3Config","region","s3Region","s3","S3","email","nodemailer","createTransport","host","port","secure","auth","user","process","env","NODEMAILER_USERNAME","pass","NODEMAILER_PASSWORD","storageDir","path","join","__dirname","upload","storage","bucket","s3Bucket","metadata","req","file","cb","fieldName","fieldname","key","filename","Date","now","toString","originalname","PORT","app","server","http","createServer","use","exposedHeaders","bodyParser","json","limit","set","err","db","console","log","AppRouter","listen","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;;;AAEAA,iBAAOC,MAAP;AALA;;;AAOAC,iBAAID,MAAJ,CAAWE,MAAX,CAAkBC,gBAAlB;;AAEAF,iBAAID,MAAJ,CAAWI,MAAX,GAAoBC,gBAApB;;AAEA,IAAMC,KAAK,IAAIL,iBAAIM,EAAR,EAAX;;AAEA;AACA,IAAIC,QAAQC,qBAAWC,eAAX,CAA2B;AACtCC,OAAM,mBADgC;AAEtCC,OAAM,GAFgC;AAGtCC,SAAQ,KAH8B,EAGvB;AACfC,OAAM;AACLC,QAAMC,QAAQC,GAAR,CAAYC,mBADb,EACkC;AACvCC,QAAMH,QAAQC,GAAR,CAAYG,mBAFb,CAEiC;AAFjC;AAJgC,CAA3B,CAAZ;;AAUA;AACA,IAAMC,aAAaC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,SAA3B,CAAnB;;AAEA;;AAEA,IAAMC,SAAS,sBAAO;AACrBC,UAAS,uBAAS;AACjBpB,MAAIA,EADa;AAEjBqB,UAAQC,gBAFS;AAGjBC,YAAU,kBAASC,GAAT,EAAcC,IAAd,EAAoBC,EAApB,EAAwB;AACjCA,MAAG,IAAH,EAAS,EAAEC,WAAWF,KAAKG,SAAlB,EAAT;AACA,GALgB;AAMjBC,OAAK,aAASL,GAAT,EAAcC,IAAd,EAAoBC,EAApB,EAAwB;AAC5B,OAAMI,WAAcC,KAAKC,GAAL,GAAWC,QAAX,EAAd,SAAuCR,KAAKS,YAAlD;AACAR,MAAG,IAAH,EAASI,QAAT;AACA;AATgB,EAAT;AADY,CAAP,CAAf;;AAcA;;AAEA,IAAMK,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEAA,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEAJ,IAAII,GAAJ,CACC,oBAAK;AACJC,iBAAgB;AADZ,CAAL,CADD;;AAMAL,IAAII,GAAJ,CACCE,qBAAWC,IAAX,CAAgB;AACfC,QAAO;AADQ,CAAhB,CADD;;AAMAR,IAAIS,GAAJ,CAAQ,MAAR,EAAgB3B,SAAhB;AACAkB,IAAIS,GAAJ,CAAQ,YAAR,EAAsB9B,UAAtB;AACAqB,IAAIjB,MAAJ,GAAaA,MAAb;AACAiB,IAAIlC,KAAJ,GAAYA,KAAZ;AACAkC,IAAIpC,EAAJ,GAASA,EAAT;;AAEA;AACA,uBAAQ,UAAC8C,GAAD,EAAMC,EAAN,EAAa;AACpB,KAAID,GAAJ,EAAS;AACRE,UAAQC,GAAR,CAAY,qCAAZ,EAAmDH,GAAnD;AACA,QAAMA,GAAN;AACA;;AAEDV,KAAIS,GAAJ,CAAQ,IAAR,EAAcE,EAAd;;AAEA;AACA,KAAIG,gBAAJ,CAAcd,GAAd;;AAEAA,KAAIC,MAAJ,CAAWc,MAAX,CAAkBzC,QAAQC,GAAR,CAAYwB,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AACjDa,UAAQC,GAAR,6BAAsCb,IAAIC,MAAJ,CAAWe,OAAX,GAAqB9C,IAA3D;AACA,EAFD;AAGA,CAdD;;kBAgBe8B,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport multer from 'multer';\r\nimport path from 'path';\r\nimport nodemailer from 'nodemailer';\r\nimport { connect } from './database';\r\nimport AppRouter from './router';\r\nimport { s3Config, s3Region, s3Bucket } from './config';\r\n// Amazon s3 setup\r\nimport AWS from 'aws-sdk';\r\nimport multerS3 from 'multer-s3';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nAWS.config.update(s3Config);\r\n\r\nAWS.config.region = s3Region;\r\n\r\nconst s3 = new AWS.S3();\r\n\r\n//setup email\r\nlet email = nodemailer.createTransport({\r\n\thost: 'smtp.sendgrid.net',\r\n\tport: 587,\r\n\tsecure: false, // true for 465, false for other ports\r\n\tauth: {\r\n\t\tuser: process.env.NODEMAILER_USERNAME, // generated ethereal user\r\n\t\tpass: process.env.NODEMAILER_PASSWORD // generated ethereal password\r\n\t}\r\n});\r\n\r\n//File storage config\r\nconst storageDir = path.join(__dirname, '..', 'storage');\r\n\r\n//const upload = multer({ storage: storageConfig }); //local upload\r\n\r\nconst upload = multer({\r\n\tstorage: multerS3({\r\n\t\ts3: s3,\r\n\t\tbucket: s3Bucket,\r\n\t\tmetadata: function(req, file, cb) {\r\n\t\t\tcb(null, { fieldName: file.fieldname });\r\n\t\t},\r\n\t\tkey: function(req, file, cb) {\r\n\t\t\tconst filename = `${Date.now().toString()}-${file.originalname}`;\r\n\t\t\tcb(null, filename);\r\n\t\t}\r\n\t})\r\n});\r\n\r\n//end file storage config\r\n\r\nconst PORT = 3000;\r\nconst app = express();\r\napp.server = http.createServer(app);\r\n\r\napp.use(morgan('dev'));\r\n\r\napp.use(\r\n\tcors({\r\n\t\texposedHeaders: '*'\r\n\t})\r\n);\r\n\r\napp.use(\r\n\tbodyParser.json({\r\n\t\tlimit: '50mb'\r\n\t})\r\n);\r\n\r\napp.set('root', __dirname);\r\napp.set('storageDir', storageDir);\r\napp.upload = upload;\r\napp.email = email;\r\napp.s3 = s3;\r\n\r\n//connect to database\r\nconnect((err, db) => {\r\n\tif (err) {\r\n\t\tconsole.log('an error connecting to the database', err);\r\n\t\tthrow err;\r\n\t}\r\n\r\n\tapp.set('db', db);\r\n\r\n\t// init routers.\r\n\tnew AppRouter(app);\r\n\r\n\tapp.server.listen(process.env.PORT || PORT, () => {\r\n\t\tconsole.log(`App is running on port ${app.server.address().port}`);\r\n\t});\r\n});\r\n\r\nexport default app;\r\n"]}